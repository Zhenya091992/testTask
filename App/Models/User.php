<?php

namespace App\Models;

use App\Config;
use App\Model;
use App\StorageInterface;

class User extends Model
{
    protected $table = 'user';

    public function __set($name, $value)
    {
        if ($name === 'password') {
            $value = $this->handlePassword($value);
        }
        parent::__set($name, $value); // TODO: Change the autogenerated stub
    }

    public static function checkPassword($login, $password)
    {
        $storage = $storage ?? Config::instance()->configData['storage'];
        $user = $storage->findWhere('user', ['login' => $login]);
        if (!empty($user[0])) {
            if (password_verify($user[0]->salt . $password . $user[0]->salt, $user[0]->password)) {

                return $user;
            }
        }

        return false;
    }

    public function authenticate(bool $remember)
    {
        $_SESSION['userid'] = $this->id;
        if ($remember) {
            $this->token = rand(10000000000000000, 100000000000000000);
            $time = time()+86400 * 30 * 12;
            setcookie('loginUser', $this->login, $time);
            setcookie('tokenUser', $this->token, $time);
            $this->save();
        }
    }

    public function unlog()
    {
        $this->token = null;
        $this->save();
    }

    protected function handlePassword($password)
    {
        $this->salt ?? rand(100000, 10000000);

        return md5($this->salt . $password . $this->salt);
    }


}
